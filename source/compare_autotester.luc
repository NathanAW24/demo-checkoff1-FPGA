module compare_autotester (
    input clk,  // clock
    input rst,  // reset
    input button_next_test_case[1], // down btn press 
    input button_speed_through[1], // up button press 
    input button_reset,
    input inv[1],
    output current_test_case[5],
    output current_statusPF[2],
    output out[16]
  ) {
  
  // register to store the current test case  number 
  dff current_test_case_register[5](.clk(clk) , .rst(rst));
  
  // register to set the tester on speed through tests all
  // test cases at once no waiting for button 
  dff speed_through[1](.clk(clk) , .rst(rst));
  
  // Declare the fsm states
  fsm state (.clk(clk), .rst(rst)) = {IDLE, TESTING, PASS};
  fsm track_failure (.clk(clk), .rst(rst)) = {NULL, FAIL_BEFORE};
  
  //import alu
  alu alu_unit; 
  

  always {
  
    // declare initial values
    current_test_case = 5b0;
    // a b and alufn_signal
    alu_unit.a = 16b0;
    alu_unit.b = 16b0;
    alu_unit.inv = inv;
    alu_unit.alufn_signal = 6b110111; // CMPEQ
    state.d = state.IDLE;
    current_statusPF = 0;
    
    
    if (button_speed_through) {
      speed_through.d = b1;
    } 
    
    
    
    case(state.q) {
      state.IDLE:
        if(speed_through.q){
          state.d = state.TESTING; 
          current_test_case_register.d = current_test_case_register.q + 1;
        }
        if(button_next_test_case){
          state.d = state.TESTING; 
          current_test_case_register.d = current_test_case_register.q +1 ;
          }
        
      state.TESTING:
        case(current_test_case_register.q) {
          // all the 25 conditions
          
          
          // ********************* COMPARE EQUALS
          // test 0 == 0  a=b 
          b00001:
            alu_unit.a = 16h0;
            alu_unit.b = 16h0;
            alu_unit.alufn_signal = 6b110111; // CMPEQ
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;
          
          //test 0x8 == 0xA pos<pos no overflow
          b00010:
            alu_unit.a = 16h8;
            alu_unit.b = 16hA;
            alu_unit.alufn_signal = 6b110111; // CMPEQ
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;
          
          //test 0xFFFF == 0xFFFF neg=neg
          b00011:
            alu_unit.a = 16hFFFF;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110111; // CMPEQ
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;
          
          
          
            
          //test 0xFFFF == 1 neg<pos no overflow
          b00100:
            alu_unit.a = 16hFFFF;
            alu_unit.b = 16h1;
            alu_unit.alufn_signal = 6b110111; // CMPEQ
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;  
            
            
            
          //test 1 == 1 pos=pos
          b00101: // 5
            alu_unit.a = 16h1;
            alu_unit.b = 16h1;
            alu_unit.alufn_signal = 6b110111; // CMPEQ
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;       
            
            
          //test 0x8000 == 0x7FFF  neg<pos overflow
          b00110: // 6
            alu_unit.a = 16h8000;
            alu_unit.b = 16h7FFF;
            alu_unit.alufn_signal = 6b110111; // CMPEQ
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;       
            
          //test 0xFFFE == 0xFFFF  neg<neg no overflow
          b00111: // 7
            alu_unit.a = 16hFFFE;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110111; // CMPEQ
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;     
            
            
            
          //test 0xFFFE == 0xFFFF  neg<neg no overflow
          b01000: // 8
            alu_unit.a = 16h0;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110111; // CMPEQ
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;       
            
          
            
            
            
          // ********************* COMPARE LESS THAN
          //test 0xFFFE == 0xFFFF  neg<neg no overflow
          b01001: // 9
            alu_unit.a = 16h8;
            alu_unit.b = 16hA;
            alu_unit.alufn_signal = 6b110101; // CMPLT
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;      
            
            
          //test 1 < 1 pos=pos
          b01010: // 10
            alu_unit.a = 16h1;
            alu_unit.b = 16h1;
            alu_unit.alufn_signal = 6b110101; // CMPLT
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;          
            
          //test 0xFFFF < 1 neg<pos no overflow
          b01011: // 11
            alu_unit.a = 16hFFFF;
            alu_unit.b = 16h1;
            alu_unit.alufn_signal = 6b110101; // CMPLT
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;      
            
          // test 0 < 0  a=b 
          b01100: // 12
            alu_unit.a = 16h0;
            alu_unit.b = 16h0;
            alu_unit.alufn_signal = 6b110101; // CMPLT
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;             
            
            
          //test 0x8000 < 0x7FFF  neg<pos overflow
          b01101: // 13
            alu_unit.a = 16h8000;
            alu_unit.b = 16h7FFF;
            alu_unit.alufn_signal = 6b110101; // CMPLT
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;  
            
            
            
          //test 0xFFFF < 0xFFFF neg=neg
          b01110: // 14
            alu_unit.a = 16hFFFF;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110101; // CMPLT
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;         
            
            
            
             
          // test 0xFFFE < 0xFFFF  neg<neg no overflow
          b01111: // 15
            alu_unit.a = 16hFFFE;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110101; // CMPLT
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;        
            
            
            
            
          // test 0 < 0xFFFF a>b
          b10000: // 16
            alu_unit.a = 16h0;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110101; // CMPLT
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;        
            
            
            
          // ********************* COMPARE LESS THAN EQUALS
          // test 0 <= 0  a=b 
          b10001: // 17
            alu_unit.a = 16h0;
            alu_unit.b = 16h0;
            alu_unit.alufn_signal = 6b110111; // CMPLE
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;       
            

            
          // test 0 <= 0xFFFF a>b
          b10010:// 18
            alu_unit.a = 16h0;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110111; // CMPLE
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 0) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;          
            
            
          // test 0xFFFF <= 0xFFFF neg=neg
          b10011:// 19
            alu_unit.a = 16hFFFF;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110111; // CMPLE
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;      
            
            
            
          // test 0x8 <=0xA pos<pos no overflow
          b10100: // 20
            alu_unit.a = 16h8;
            alu_unit.b = 16hA;
            alu_unit.alufn_signal = 6b110111; // CMPLE
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;      
            
            
            
          // test 0xFFFF <=1 neg<pos no overflow
          b10101: // 21
            alu_unit.a = 16hFFFF;
            alu_unit.b = 16h1;
            alu_unit.alufn_signal = 6b110111; // CMPLE
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;      
            
            
            
          // test 0x8000 <= 0x7FFF  neg<pos overflow
          b10110: // 22
            alu_unit.a = 16h8000;
            alu_unit.b = 16h7FFF;
            alu_unit.alufn_signal = 6b110111; // CMPLE
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;      
            
            
            
          // test 0xFFFE <= 0xFFFF  neg<neg no overflow
          b10111: // 23
            alu_unit.a = 16hFFFE;
            alu_unit.b = 16hFFFF;
            alu_unit.alufn_signal = 6b110111; // CMPLE
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;         
            
            
            
          // test 1 <= 1 pos=pos
          b11000: // 24
            alu_unit.a = 16h1;
            alu_unit.b = 16h1;
            alu_unit.alufn_signal = 6b110111; // CMPLE
            current_statusPF = 1;
            current_test_case = current_test_case_register.q;

            
            if (alu_unit.out != 1) {
              track_failure.d = track_failure.FAIL_BEFORE;
              current_statusPF = 2;  
        
            }
            
            state.d = state.IDLE;   
            
            
            
          //****************************************  
          //if all test cases passed up to here, pass
          // test 1 <= 1 pos=pos
          b11001: // 25
            state.d = state.PASS;   
            
      
        }         
        
        
        
        
      state.PASS:
        if(track_failure.q == track_failure.FAIL_BEFORE){
          current_statusPF = 2 ;
          }else{
            current_statusPF = 1;
          }
        if(button_reset){
          state.d = state.IDLE;
        }
        
      
    }
    
    
    
    
    out = alu_unit.out;
  }
}
